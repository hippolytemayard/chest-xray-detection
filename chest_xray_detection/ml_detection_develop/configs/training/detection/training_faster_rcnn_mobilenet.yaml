EXPERIMENT: 400
ROOT_PROJECT: /home/ubuntu/code/chest-xray-detection
EXPERIMENT_FOLDER: ${ROOT_PROJECT}/experiments
ROOT_EXPERIMENT: ${EXPERIMENT_FOLDER}/experiment_${EXPERIMENT}

TRAINING:
  EPOCHS: 100
  BACKBONE: "mobilenet"
  PRETRAINED: TRUE
  BATCH_SIZE: 4
  OPTIMIZER: Adam 
  LEARNING_RATE:  0.0005 #0.001
  EVALUATION_FREQUENCY: 1
  PRINT_FREQ: 1000
  PATH_MODEL : ${..ROOT_EXPERIMENT}/saved_models
  PATH_LOGS : ${..ROOT_EXPERIMENT}/training.log
  ENABLE_TENSORBOARD : TRUE
  TENSORBOARD_DIR: ${..ROOT_EXPERIMENT}/tensorboard_logs

  MERGE_CLASSES : FALSE
  CROSS_VALIDATION : FALSE

  DATASET:
    PATH_LABELS : ./data/label_train.txt
    IMAGES_DIR : ./data/train_img/
    NUM_CLASSES: 9
    VALIDATION_SPLIT: 0.25
    RANDOM_SEED: 42
    BATCH_SIZE: 4

    #TRANSFORMS:
    #  TRAINING:
    #    frameworks: ["torchvision", "torchvision"]
    #    classes: ["RGB" , "RandomHorizontalFlip"]
    #    classes_params: [
    #      {},
    #      {"p": 0.5},
    #    ]
    #  VALIDATION:
    #    frameworks: ["torchvision"]
    #    classes: ["RGB"]
    #    classes_params: [
    #      {},
    #    ]

    TRANSFORMS:
      TRAINING:
        frameworks: ["torchvision","torchvision","torchvision","torchvision"]
        classes: ["RGB", "RandomHorizontalFlip", "RandomRotation", "RandomVerticalFlip"]
        classes_params: [
          {},
          {"p": 0.5},
          {"degrees": 10},
          {"p": 0.2},
        ]
      VALIDATION:
        frameworks: ["torchvision"]
        classes: ["RGB"]
        classes_params: [
          {},
        ]


VALIDATION:
  SAVING_METRIC : MeanAveragePrecision
  METRICS_OF_INTEREST : [""]
  METRICS:
    frameworks: ["torchmetrics"]
    classes: ["MeanAveragePrecision"]
    classes_params: [
      {"iou_type":"bbox"},
    ]
